{{ ansible_managed | comment() }}

upstream php-pimcore {
    server unix:/var/run/php/php{{ php_version | default("7.0") }}-fpm.sock;
}

server {
  listen 80;
  listen [::]:80;
  server_name {{ item.host_name }};
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name {{ item.host_name }};
  root {{ item.document_root }};

  location / {
    # try to serve file directly, fallback to app.php
    try_files $uri /app.php$is_args$args;
  }

  {% if item.environment.APP_ENV == "production" %}
  location ~ ^/app\.php(/|$) {
  {% else %}
  location ~ ^/(app_dev|config)\.php(/|$) {
  {% endif %}
    fastcgi_pass php-pimcore
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;
    {% if item.environment.APP_ENV is defined %}
    fastcgi_param APP_ENV {{ item.environment.APP_ENV }};
    {% endif %}

    {% if item.environment.APP_ENV == "production" %}
    internal; # dont allow /app.php/^in production
    {% endif %}
  }

  location ~ \.php$ {
    return 404;
  }

  ssl_certificate /etc/nginx/ssl/${ansible_fqdn}-selfsigned.crt;
  ssl_certificate_key /etc/nginx/ssl/${ansible_fqdn}-selfsigned.key;
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  error_log /var/log/nginx/{{ item.host_name }}_error.log;
  access_log /var/log/nginx/{{ item.host_name }}_access.log;
}
